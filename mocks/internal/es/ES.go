// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	model "github.com/superhero-match/consumer-delete-media/internal/es/model"
)

// ES is an autogenerated mock type for the ES type
type ES struct {
	mock.Mock
}

// DeleteProfilePicture provides a mock function with given fields: superheroID, position, deletedAt
func (_m *ES) DeleteProfilePicture(superheroID string, position int64, deletedAt string) error {
	ret := _m.Called(superheroID, position, deletedAt)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int64, string) error); ok {
		r0 = rf(superheroID, position, deletedAt)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetDocumentID provides a mock function with given fields: superheroID
func (_m *ES) GetDocumentID(superheroID string) (string, error) {
	ret := _m.Called(superheroID)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(superheroID)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(superheroID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSuperhero provides a mock function with given fields: superheroID
func (_m *ES) GetSuperhero(superheroID string) (*model.Superhero, error) {
	ret := _m.Called(superheroID)

	var r0 *model.Superhero
	if rf, ok := ret.Get(0).(func(string) *model.Superhero); ok {
		r0 = rf(superheroID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Superhero)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(superheroID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
